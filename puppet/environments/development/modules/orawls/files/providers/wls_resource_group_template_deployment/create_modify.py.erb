# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'

wlst_action = '<%= wlst_action %>'

resource_group_template_name = '<%= resource_group_template_name %>'
name              = '<%= deployment_name %>'
localpath         = '<%= localpath %>'
planpath          = '<%= planpath %>'
deploymenttype    = '<%= deploymenttype %>'
versionidentifier = '<%= versionidentifier %>'
remote            = '<%= remote %>'
upload            = '<%= upload %>'
stagingmode       = '<%= stagingmode %>'

edit()
startEdit()

try:

    cd('/ResourceGroupTemplates/' + resource_group_template_name)

    if remote == '1':
        remoteflag = 'true'
    else:
        remoteflag = 'false'

    if upload == '1':
        uploadflag = 'true'
    else:
        uploadflag = 'false'

    if deploymenttype == 'Library':
        library = 'true'
        if wlst_action == 'modify':
            mylibs = cmo.getLibraries()
            for libName in mylibs:
                cd('/ResourceGroupTemplates/' + resource_group_template_name + '/Libraries/' + libName.getName())
                if get('ApplicationName') == name:
                    fullApp = libName.getName()
                    currentApp = get('ApplicationName')
                    currentVersionidentifier = get('VersionIdentifier')
    else:
        library = 'false'
        if wlst_action == 'modify':
            myapps = cmo.getAppDeployments()
            for appName in myapps:
                cd('/ResourceGroupTemplates/' + resource_group_template_name + '/AppDeployments/' + appName.getName())
                if get('ApplicationName') == name:
                    fullApp = appName.getName()
                    currentApp = get('ApplicationName')
                    currentVersionidentifier = get('VersionIdentifier')

    if wlst_action == 'modify':
        # if we got the right app
        print 'step 1....'
        cd('/')
        print 'current version: ' + str(currentVersionidentifier)
        # version is different
        if currentVersionidentifier != versionidentifier:
            print 'undeploy....'
            undeploy(currentApp, timeout=90000)

    print 'deploying....'
    if versionidentifier:
        if planpath:
            print 'deploying with version and deploymentplan....'
            if stagingmode:
                deploy(appName=name, path=localpath, planPath=planpath, resourceGroupTemplate=resource_group_template_name, stageMode=stagingmode, remote=remoteflag, upload=uploadflag, libraryModule=library, versionIdentifier=versionidentifier)
            else:
                deploy(appName=name, path=localpath, planPath=planpath, resourceGroupTemplate=resource_group_template_name, remote=remoteflag, upload=uploadflag, libraryModule=library, versionIdentifier=versionidentifier)
        else:
            print 'deploying with version without deploymentplan....'
            if stagingmode:
                deploy(appName=name, path=localpath, resourceGroupTemplate=resource_group_template_name, remote=remoteflag, stageMode=stagingmode, upload=uploadflag, libraryModule=library, versionIdentifier=versionidentifier)
            else:
                deploy(appName=name, path=localpath, resourceGroupTemplate=resource_group_template_name, remote=remoteflag, upload=uploadflag, libraryModule=library, versionIdentifier=versionidentifier)
    else:
        if planpath:
            if stagingmode:
                deploy(appName=name, path=localpath, planPath=planpath, resourceGroupTemplate=resource_group_template_name, remote=remoteflag, stageMode=stagingmode, upload=uploadflag, libraryModule=library)
            else:
                deploy(appName=name, path=localpath, planPath=planpath, resourceGroupTemplate=resource_group_template_name, remote=remoteflag, upload=uploadflag, libraryModule=library)
        else:
            if stagingmode:
                deploy(appName=name, path=localpath, resourceGroupTemplate=resource_group_template_name, remote=remoteflag, stageMode=stagingmode, upload=uploadflag, libraryModule=library)
            else:
                deploy(appName=name, path=localpath, resourceGroupTemplate=resource_group_template_name, remote=remoteflag, upload=uploadflag, libraryModule=library)

    save()
    activate()
    report_back_success()

except:
    report_back_error()
