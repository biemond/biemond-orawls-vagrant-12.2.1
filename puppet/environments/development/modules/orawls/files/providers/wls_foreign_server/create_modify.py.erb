# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'

wlst_action = '<%= wlst_action %>'

name                      = '<%= foreign_server_name %>'
jmsmodule                 = '<%= jmsmodule %>'
subdeployment             = '<%= subdeployment %>'
defaulttargeting          = '<%= defaulttargeting %>'
initialcontextfactory     = '<%= initialcontextfactory %>'
password                  = '<%= password %>'
connectionurl             = '<%= connectionurl %>'
extraproperties           = '<%= extraproperties %>'

edit()
startEdit()

try:

    cd('/')
    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule)
    if wlst_action == 'create':
        cmo.createForeignServer(name)

    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ForeignServers/'+name)

    set_attribute_value('DefaultTargetingEnabled', defaulttargeting, use_default_value_when_empty)

    if subdeployment and defaulttargeting == "0":
      set_attribute_value('SubDeploymentName', subdeployment, use_default_value_when_empty)
    elif not subdeployment and defaulttargeting == "1":
      set_attribute_value('DefaultTargetingEnabled', true, use_default_value_when_empty)
    elif subdeployment and defaulttargeting == "1":
      raise ValueError('Defaulttargeting and Subdeployment are both set, only one can be active for JMS components')
    else:
      raise ValueError('Either defaulttargeting or a subdeployment needs to be selected for JMS components')

    set_attribute_value('ConnectionURL', connectionurl, use_default_value_when_empty)
    set_attribute_value('InitialContextFactory', initialcontextfactory, use_default_value_when_empty)
    set_attribute_value('JNDIPropertiesCredential', password, use_default_value_when_empty)

    if extraproperties:
      properties=String(extraproperties).split(",")
      for property in properties:
        propname, val = property.split("=")
        cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ForeignServers/'+name)
        try:
          cmo.createJNDIProperty(propname)
        except:
          print "already exists"

        cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ForeignServers/'+name + '/JNDIProperties/' +propname)
        cmo.setValue(val)

    save()
    activate()
    report_back_success()

except:
    report_back_error()
