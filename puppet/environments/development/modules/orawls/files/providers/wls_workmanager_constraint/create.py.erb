# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'



name             = '<%= workmanager_constraint_name %>'
type             = '<%= constrainttype %>'
target           = '<%= target %>'
targettype       = '<%= targettype %>'
count            = '<%= constraintvalue %>'

edit()
startEdit()

def target_list(targets, targettypes):
    targetList = []
    for i in range(len(targets)):
        bean = ObjectName('com.bea:Name=' + targets[i] + ',Type='+targettypes[i])
        targetList.append(bean)

    return jarray.array(targetList, ObjectName)

try:

    cd('/')
    domain = get('Name')

    cd('/SelfTuning/'+domain)
    if type == 'MaxThreadsConstraint':
      cmo.createMaxThreadsConstraint(name)
      cd('/SelfTuning/'+domain+'/MaxThreadsConstraints/'+name)
    elif type == 'MinThreadsConstraint':
      cmo.createMinThreadsConstraint(name)
      cd('/SelfTuning/'+domain+'/MinThreadsConstraints/'+name)
    elif type == 'Capacity':
      cmo.createCapacity(name)
      cd('/SelfTuning/'+domain+'/Capacities/'+name)
    elif type == 'FairShareRequestClasses':
      create(name, 'FairShareRequestClasses')
      cd('/SelfTuning/'+domain+'/FairShareRequestClasses/'+name)

    if type == 'FairShareRequestClasses':
      set('FairShare', int(count))
    else:
      cmo.setCount(int(count))

    targetList = target_list(String(target).split(","), String(targettype).split(","))
    set('Targets', targetList)

    save()
    activate()
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    print "~~~~COMMAND FAILED~~~~"
    raise
