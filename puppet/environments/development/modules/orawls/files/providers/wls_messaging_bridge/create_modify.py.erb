# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'

wlst_action = '<%= wlst_action %>'

name                    = '<%= bridge_name %>'
target                  = '<%= target %>'
targettype              = '<%= targettype %>'
asyncenabled            = '<%= asyncenabled %>'
batchinterval           = '<%= batchinterval %>'
batchsize               = '<%= batchsize %>'
durabilityenabled       = '<%= durabilityenabled %>'
idletimemax             = '<%= idletimemax %>'
preservemsgproperty     = '<%= preservemsgproperty %>'
qosdegradationallowed   = '<%= qosdegradationallowed %>'
qos                     = '<%= qos %>'
reconnectdelayincrease  = '<%= reconnectdelayincrease %>'
reconnectdelaymax       = '<%= reconnectdelaymax %>'
reconnectdelaymin       = '<%= reconnectdelaymin %>'
selector                = '<%= selector %>'
started                 = '<%= started %>'
transactiontimeout      = '<%= transactiontimeout %>'
sourcedestination       = '<%= sourcedestination %>'
targetdestination       = '<%= targetdestination %>'

edit()
startEdit()

try:
    cd('/')
    if wlst_action == 'create':
      cmo.createMessagingBridge(name)

    cd('/MessagingBridges/' + name)
    cmo.setName(name)

    set_attribute_value('BatchInterval', batchinterval)
    set_attribute_value('BatchSize', batchsize)
    set_attribute_value('AsyncEnabled', asyncenabled)
    set_attribute_value('DurabilityEnabled', durabilityenabled)
    set_attribute_value('IdleTimeMaximum', idletimemax)

    set_attribute_value('PreserveMsgProperty', preservemsgproperty)
    set_attribute_value('QOSDegradationAllowed', qosdegradationallowed)

    set_attribute_value('ReconnectDelayIncrease', reconnectdelayincrease)
    set_attribute_value('ReconnectDelayMaximum', reconnectdelaymax)
    set_attribute_value('ReconnectDelayMinimum', reconnectdelaymin)

    cmo.setSourceDestination(getMBean('/JMSBridgeDestinations/'+sourcedestination))
    cmo.setTargetDestination(getMBean('/JMSBridgeDestinations/'+targetdestination))

    set_attribute_value('Selector', selector)
    set_attribute_value('QualityOfService', qos)
    set_attribute_value('Started', started)
    set_attribute_value('TransactionTimeout', transactiontimeout)

    print "deployments"
    cd('/Deployments/' + name )

    targetList = target_list(String(target).split(","), String(targettype).split(","))
    set('Targets', targetList)

    save()
    activate()
    report_back_success()

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    report_back_error()
    raise

data