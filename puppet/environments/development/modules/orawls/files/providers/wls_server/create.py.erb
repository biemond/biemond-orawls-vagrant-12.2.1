# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'

wlst_action = '<%= wlst_action %>'

name          = '<%= server_name %>'
classpath     = '<%= classpath %>'
<% unless arguments.nil? %>
arguments     = '<%= arguments.join(' ') %>'
<% end %>
machineName   = '<%= machine %>'
bea_home      = '<%= bea_home %>'

logFilename                 = '<%= logfilename %>'
log_http_Filename           = '<%= log_http_filename %>'
log_http_format             = '<%= log_http_format %>'
log_http_format_type        = '<%= log_http_format_type %>'
log_http_file_count              = '<%= log_http_file_count %>'
log_http_number_of_files_limited = '<%= log_http_number_of_files_limited %>'
log_datasource_Filename     = '<%= log_datasource_filename %>'
log_file_min_size           = '<%= log_file_min_size %>'
log_filecount               = '<%= log_filecount %>'
log_rotate_logon_startup    = '<%= log_rotate_logon_startup %>'
log_rotationtype            = '<%= log_rotationtype %>'
log_number_of_files_limited = '<%= log_number_of_files_limited %>'
log_redirect_stderr_to_server = '<%= log_redirect_stderr_to_server %>'
log_redirect_stdout_to_server = '<%= log_redirect_stdout_to_server %>'
log_date_pattern              = '<%= log_date_pattern %>'

restart_max       = '<%= restart_max %>'
listenAddress     = '<%= listenaddress %>'
listenPort        = '<%= listenport %>'
listenPortEnabled = '<%= listenportenabled %>'
sslEnabled        = '<%= sslenabled %>'
sslHostnameVerificationIgnored = '<%= sslhostnameverificationignored %>'
sslhostnameverifier = '<%= sslhostnameverifier %>'
two_way_ssl       = '<%= two_way_ssl %>'
client_certificate_enforced = '<%= client_certificate_enforced %>'
sslListenPort     = '<%= ssllistenport %>'
useservercerts = '<%= useservercerts %>'


logintimeout      = '<%= logintimeout %>'
jsseenabled       = '<%= jsseenabled %>'
tunnelingenabled  = '<%= tunnelingenabled %>'

custom_identity                        = '<%= custom_identity %>'
custom_identity_keystore_filename      = '<%= custom_identity_keystore_filename %>'
custom_identity_keystore_passphrase    = '<%= custom_identity_keystore_passphrase %>'
custom_identity_alias                  = '<%= custom_identity_alias %>'
custom_identity_privatekey_passphrase  = '<%= custom_identity_privatekey_passphrase %>'
trust_keystore_file                    = '<%= trust_keystore_file %>'
trust_keystore_passphrase              = '<%= trust_keystore_passphrase %>'

default_file_store                     = '<%= default_file_store %>'
max_message_size                       = '<%= max_message_size %>'
weblogic_plugin_enabled                = '<%= weblogic_plugin_enabled %>'
auto_restart                           = '<%= auto_restart %>'
autokillwfail                          = '<%= autokillwfail %>'

server_parameters		       = '<%= server_parameters %>'

frontend_host                  = '<%= frontendhost %>'
frontend_http_port             = '<%= frontendhttpport %>'
frontend_https_port            = '<%= frontendhttpsport %>'

edit()
startEdit()

try:

    cd('/')
    AdminServerName = get('AdminServerName')
    if name == AdminServerName:
      raise "Cannot create a new AdminServer, its not allowed"

    cmo.createServer(name)

    cd('/Servers/'+name)
    set('Machine',getMBean('/Machines/'+machineName))

    print "Change Notes"
    if server_parameters and server_parameters != 'None':
      set_attribute_value('Notes', server_parameters)

    print "Change listenAddress"
    if listenAddress and not listenAddress.isspace():
      set_attribute_value('ListenAddress', listenAddress)

    set_attribute_value('ListenPort', listenPort)
    if listenPortEnabled and listenPortEnabled != '-1':
      set_attribute_value('ListenPortEnabled', listenPortEnabled)

    set_attribute_value('LoginTimeoutMillis', logintimeout)
    set_attribute_value('MaxMessageSize', max_message_size)
    set_attribute_value('RestartMax', restart_max)

    if classpath:
      set('ServerStart/'+name+'/ClassPath', classpath)

    if bea_home:
      set('ServerStart/'+name+'/BeaHome', bea_home)

    if arguments:
      set('ServerStart/'+name+'/Arguments', arguments)

    set_attribute_value('TunnelingEnabled', tunnelingenabled)
    set_attribute_value('WeblogicPluginEnabled', weblogic_plugin_enabled)

    if custom_identity == '1':
      set_attribute_value('KeyStores', 'CustomIdentityAndCustomTrust')
      set_attribute_value('CustomIdentityKeyStoreFileName', custom_identity_keystore_filename)
      set_attribute_value('CustomIdentityKeyStorePassPhrase', custom_identity_keystore_passphrase)
      set_attribute_value('CustomTrustKeyStoreFileName', trust_keystore_file)
      set_attribute_value('CustomTrustKeyStorePassPhrase', trust_keystore_passphrase)

      cd('SSL/'+name)
      set_attribute_value('ServerPrivateKeyAlias', custom_identity_alias)
      set_attribute_value('ServerPrivateKeyPassPhrase', custom_identity_privatekey_passphrase)

    if custom_identity == '0':
      set_attribute_value('KeyStores', 'DemoIdentityAndDemoTrust')

    cd('/Servers/'+name)
    set_attribute_value('AutoRestart', auto_restart)
    set_attribute_value('AutoKillIfFailed', autokillwfail)

    cd('/Servers/'+name+'/WebServer/'+name)

    set_attribute_value('FrontendHost', frontend_host)
    set_attribute_value('FrontendHTTPPort', frontend_http_port)
    set_attribute_value('FrontendHTTPSPort', frontend_https_port)

    print "Change SSL"
    cd('/Servers/'+name+'/SSL/'+name)

    if sslEnabled and sslEnabled != '-1':
      set_attribute_value('Enabled', sslEnabled)
    if jsseenabled and jsseenabled != '-1':
      set_attribute_value('JSSEEnabled', jsseenabled)
    if sslHostnameVerificationIgnored and sslHostnameVerificationIgnored != '-1':
      set_attribute_value('HostnameVerificationIgnored', sslHostnameVerificationIgnored)
      if sslHostnameVerificationIgnored == '0' and sslhostnameverifier:
        set_attribute_value('HostnameVerifier', sslhostnameverifier)

    set_attribute_value('TwoWaySSLEnabled', two_way_ssl)
    set_attribute_value('ClientCertificateEnforced', client_certificate_enforced)
    set_attribute_value('ListenPort', sslListenPort)
    set_attribute_value('UseServerCerts', useservercerts)

    cd('/Servers/'+name+'/Log/'+name)
    set_attribute_value('FileName', logFilename)
    set_attribute_value('RotationType', log_rotationtype)
    set_attribute_value('RotateLogOnStartup', log_rotate_logon_startup)
    set_attribute_value('FileCount', log_filecount)
    set_attribute_value('NumberOfFilesLimited', log_number_of_files_limited)
    set_attribute_value('FileMinSize', log_file_min_size)
    set_attribute_value('DateFormatPattern', log_date_pattern)
    set_attribute_value('RedirectStderrToServerLogEnabled', log_redirect_stderr_to_server)
    set_attribute_value('RedirectStdoutToServerLogEnabled', log_redirect_stdout_to_server)

    print "web server log: " + name
    cd('/Servers/'+name+'/WebServer/'+name+'/WebServerLog/'+name)
    set_attribute_value('NumberOfFilesLimited', log_http_number_of_files_limited)
    set_attribute_value('FileCount', log_http_file_count)
    set_attribute_value('FileName', log_http_Filename)
    set_attribute_value('RotationType', log_rotationtype)
    set_attribute_value('RotateLogOnStartup', log_rotate_logon_startup)
    set_attribute_value('FileMinSize', log_file_min_size)
    set_attribute_value('LogFileFormat', log_http_format_type)
    set_attribute_value('ELFFields', log_http_format)


    print "datasource server log: " + name
    cd('/Servers/'+name+'/DataSource/'+name+'/DataSourceLogFile/'+name)
    set_attribute_value('FileName', log_datasource_Filename)
    set_attribute_value('RotationType', log_rotationtype)
    set_attribute_value('RotateLogOnStartup', log_rotate_logon_startup)
    set_attribute_value('FileCount', log_filecount)
    set_attribute_value('NumberOfFilesLimited', log_number_of_files_limited)
    set_attribute_value('FileMinSize', log_file_min_size)

    if default_file_store:
      cd('/Servers/'+name+'/DefaultFileStore/'+name)
      set_attribute_value('Directory', default_file_store)

    cd('/')
    DOMAIN_PATH = get('RootDirectory')

    create_boot_properties_file(DOMAIN_PATH+'/servers/'+name+'/security','boot.properties',weblogicUser,weblogicPassword)
    save()
    activate()
    report_back_success()


except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    report_back_error()
    raise


