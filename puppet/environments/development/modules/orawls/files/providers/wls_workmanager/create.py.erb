# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'



name                 = '<%= workmanager_name %>'
stuckthreads         = '<%= stuckthreads %>'
target               = '<%= target %>'
targettype           = '<%= targettype %>'
minthreadsconstraint = '<%= minthreadsconstraint %>'
maxthreadsconstraint = '<%= maxthreadsconstraint %>'
fairsharerequestclass = '<%= fairsharerequestclass %>'
capacity             = '<%= capacity %>'

edit()
startEdit()

def target_list(targets, targettypes):
    targetList = []
    for i in range(len(targets)):
        bean = ObjectName('com.bea:Name=' + targets[i] + ',Type='+targettypes[i])
        targetList.append(bean)

    return jarray.array(targetList, ObjectName)

try:

    cd('/')
    domain = get('Name')

    cd('/SelfTuning/'+domain)
    cmo.createWorkManager(name)

    cd('/SelfTuning/'+domain+'/WorkManagers/'+name)

    if stuckthreads == '1':
      cmo.setIgnoreStuckThreads(true)
    else:
      cmo.setIgnoreStuckThreads(false)

    targetList = target_list(String(target).split(","), String(targettype).split(","))
    set('Targets', targetList)

    cmo.setResponseTimeRequestClass(None)
    if fairsharerequestclass:
      cmo.setFairShareRequestClass(getMBean('/SelfTuning/'+domain+'/FairShareRequestClasses/'+fairsharerequestclass))
    else:
      cmo.setFairShareRequestClass(None)
    cmo.setContextRequestClass(None)

    if minthreadsconstraint:
      cmo.setMinThreadsConstraint(getMBean('/SelfTuning/'+domain+'/MinThreadsConstraints/'+minthreadsconstraint))

    if maxthreadsconstraint:
      cmo.setMaxThreadsConstraint(getMBean('/SelfTuning/'+domain+'/MaxThreadsConstraints/'+maxthreadsconstraint))

    if capacity:
      cmo.setCapacity(getMBean('/SelfTuning/'+domain+'/Capacities/'+capacity))

    save()
    activate()
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    print "~~~~COMMAND FAILED~~~~"
    raise



