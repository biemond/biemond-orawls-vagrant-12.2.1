# check the domain else we need to skip this (done in wls_access.rb)
real_domain='<%= domain %>'

wlst_action = '<%= wlst_action %>'

name                       = '<%= connection_factory_name %>'
jmsmodule                  = '<%= jmsmodule %>'
jndiname                   = '<%= jndiname %>'
localjndiname              = '<%= localjndiname %>'
subdeployment              = '<%= subdeployment %>'
defaulttargeting           = '<%= defaulttargeting %>'
xaenabled                  = '<%= xaenabled %>'
transactiontimeout         = '<%= transactiontimeout %>'
clientidpolicy             = '<%= clientidpolicy %>'
subscriptionsharingpolicy  = '<%= subscriptionsharingpolicy %>'
messagesmaximum            = '<%= messagesmaximum %>'
reconnectpolicy            = '<%= reconnectpolicy %>'
loadbalancingenabled       = '<%= loadbalancingenabled %>'
serveraffinityenabled      = '<%= serveraffinityenabled %>'
attachjmsxuserid           = '<%= attachjmsxuserid %>'
defaultdeliverymode        = '<%= defaultdeliverymode %>'
defaultredeliverydelay     = '<%= defaultredeliverydelay %>'

def formatBoolean(value):
  if value == '1':
    return true
  else:
    return false

edit()
startEdit()

try:

    cd('/')
    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule)

    if wlst_action == 'create':
      cmo.createConnectionFactory(name)

    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ConnectionFactories/'+name)
    cmo.setJNDIName(jndiname)
    cmo.setLocalJNDIName(localjndiname)

    if subdeployment and defaulttargeting == "0":
      cmo.setSubDeploymentName(subdeployment)
    elif not subdeployment and defaulttargeting == "1":
      cmo.setDefaultTargetingEnabled(true)
    elif subdeployment and defaulttargeting == "1":
      raise ValueError('Defaulttargeting and Subdeployment are both set, only one can be active for JMS components')
    else:
      raise ValueError('Either defaulttargeting or a subdeployment needs to be selected for JMS components')

    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ConnectionFactories/'+name+'/TransactionParams/'+name)
    if xaenabled == '1':
      cmo.setXAConnectionFactoryEnabled(true)
    else:
      cmo.setXAConnectionFactoryEnabled(false)

    if transactiontimeout:
      cmo.setTransactionTimeout( int(transactiontimeout) )

    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ConnectionFactories/'+name+'/ClientParams/'+name)
    if clientidpolicy:
      cmo.setClientIdPolicy(clientidpolicy)
    if subscriptionsharingpolicy:
      cmo.setSubscriptionSharingPolicy(subscriptionsharingpolicy)
    if messagesmaximum:
      cmo.setMessagesMaximum( int(messagesmaximum) )
    if reconnectpolicy:
      cmo.setReconnectPolicy(reconnectpolicy)

    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ConnectionFactories/'+name+'/LoadBalancingParams/'+name)
    if loadbalancingenabled:
      cmo.setLoadBalancingEnabled( formatBoolean(loadbalancingenabled) )
    if serveraffinityenabled:
      cmo.setServerAffinityEnabled( formatBoolean(serveraffinityenabled) )

    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ConnectionFactories/'+name+'/SecurityParams/'+name)
    if attachjmsxuserid:
      cmo.setAttachJMSXUserId( formatBoolean(attachjmsxuserid) )

    cd('/JMSSystemResources/'+jmsmodule+'/JMSResource/'+jmsmodule+'/ConnectionFactories/'+name+'/DefaultDeliveryParams/'+name)
    if defaultdeliverymode:
      cmo.setDefaultDeliveryMode(defaultdeliverymode)
    if defaultredeliverydelay:
      cmo.setDefaultRedeliveryDelay( int(defaultredeliverydelay) )

    save()
    activate()
    print "~~~~COMMAND SUCCESFULL~~~~"

except:
    print "Unexpected error:", sys.exc_info()[0]
    undo('true','y')
    stopEdit('y')
    print "~~~~COMMAND FAILED~~~~"
    raise
